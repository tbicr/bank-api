openapi: "3.0.1"
info:
  title: Bank API
  description: Bank API.
  version: "1.0.0"
servers:
  - url: https://api.bank.by/
    description: Bank production API.
  - url: https://sandbox.nbrb.by/
    description: Sandbox API.
paths:
  /currencies:
    get:
      summary: Currencies
      description: Currencies.
      tags:
        - Public
      parameters:
        - $ref: '#/components/parameters/AcceptParameter'
        - $ref: '#/components/parameters/ContentTypeParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/LocalisationParameter'
      responses:
        '200':
          description: An array of currencies.
          content:
            applicaiton/json:
              schema:
                $ref: "#/components/schemas/CurrencyRateList"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /atms:
    get:
      summary: ATMs
      description: ATMs.
      tags:
        - Public
      parameters:
        - $ref: '#/components/parameters/AcceptParameter'
        - $ref: '#/components/parameters/ContentTypeParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/LocalisationParameter'
      responses:
        '200':
          description: An array of ATMs.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ATMList"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /branches:
    get:
      summary: Branches
      description: Branches.
      tags:
        - Public
      parameters:
        - $ref: '#/components/parameters/AcceptParameter'
        - $ref: '#/components/parameters/ContentTypeParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/LocalisationParameter'
      responses:
        '200':
          description: An array of brnaches.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchList"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /accounts:
    get:
      summary: Accounts
      description: List of accounts.
      tags:
        - Account
      security:
        - oauth2:
          - read:accounts
      parameters:
        - $ref: '#/components/parameters/AcceptParameter'
        - $ref: '#/components/parameters/ContentTypeParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/AuthorizationParameter'
        - $ref: '#/components/parameters/LocalisationParameter'
      responses:
        '200':
          description: An array of accounts.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountList"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /account/{account_id}/transactions:
    get:
      summary: Operations History
      description: Operations history.
      tags:
        - Account
      security:
        - oauth2:
          - read:transactions
      parameters:
        - $ref: '#/components/parameters/AcceptParameter'
        - $ref: '#/components/parameters/ContentTypeParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/AuthorizationParameter'
        - $ref: '#/components/parameters/LocalisationParameter'
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            format: object-uuid
      responses:
        '200':
          description: An array of operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionList"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Make Operation
      description: Make operation.
      tags:
        - Payment
      security:
        - oauth2:
          - create:transactions
      parameters:
        - $ref: '#/components/parameters/AcceptParameter'
        - $ref: '#/components/parameters/ContentTypeParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/AuthorizationParameter'
        - $ref: '#/components/parameters/IdempotencyKeyParameter'
        - $ref: '#/components/parameters/LocalisationParameter'
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            format: object-uuid
      requestBody:
        description: Make opeation.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreate'
      responses:
        '201':
          description: Operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      callbacks:
        webhook:
          'https://3th-party-provider.by/webhooks':
            post:
              requestBody:
                description: Webhook payload.
                content:
                  applicaiton/json:
                    schema:
                      $ref: "#/components/schemas/Transaction"
              responses:
                '200':
                  description: Webhook successfully processed.
components:
  securitySchemes:
    oauth2:
      type: oauth2
      in: header
      flows:
        authorizationCode:
          authorizationUrl: https://api.bank.by/oauth2/authorize
          tokenUrl: https://api.bank.by/oauth2/access_token
          refreshUrl: https://api.bank.by/oauth2/refresh_token
          scopes:
            read:accounts: Grant read accounts access.
            read:transactions: Grant read transactions access.
            create:transactions: Grant create transactions access.
        implicit:
          authorizationUrl: https://api.bank.by/auth/login
          refreshUrl: https://api.bank.by/oauth2/refresh_token
          scopes:
            read:accounts: Grant read accounts access.
            read:transactions: Grant read transactions access.
            create:transactions: Grant create transactions access.
  schemas:
    PostalAddress:
      properties:
        country:
          type: string
          format: iso-3166-1
          description: Country code.
        state:
          type: string
          description: State (localisation).
        city:
          type: string
          description: City (localisation).
        line:
          type: string
          description: Address (localisation).
        postcode:
          type: string
          description: Postcode.
      required:
        - country
        - state
        - city
        - line
    GEOJsonPoint:
      properties:
        type:
          type: string
          description: Type `Point`
        coordinates:
          type: array
          items:
            type: number
            format: float
          description: longitude, latitude
      required:
        - type
        - coordinates
    ATM:
      properties:
        type:
          type: string
          description: Type `ATM`.
        id:
          type: string
          description: Unique identifier of ATM.
        name:
          type: string
          description: ATM name/ref (localisation).
        address:
          $ref: "#/components/schemas/PostalAddress"
          description: Postal address.
        located_at:
          type: string
          description: Additional location information (localisation).
        location:
          $ref: "#/components/schemas/GEOJsonPoint"
          description: GEO location.
        opening_hours:
          type: string
          format: opening-hours
          description: Opening hours.
        support_languages:
          type: array
          items:
            type: string
            format: iso-639-1
          description: Support languages.
        supported_currencies:
          type: array
          items:
            type: string
            format: iso-4217
          description: Support currencies.
        supported_services:
          type: array
          items:
            type: string
          description: Supported services.
      required:
        - type
        - id
        - name
        - address
        - location
        - opening_hours
    ATMList:
      properties:
        items:
          description: Contains the list of ATMs.
          type: array
          items:
            $ref: "#/components/schemas/ATM"
      required:
        - items
    Branch:
      properties:
        type:
          type: string
          description: Type `Branch`.
        id:
          type: string
          description: Unique identifier of branch.
        name:
          type: string
          description: Branch name/ref (localisation).
        address:
          $ref: "#/components/schemas/PostalAddress"
          description: Postal address.
        location:
          $ref: "#/components/schemas/GEOJsonPoint"
          description: GEO location.
        note:
          type: string
          description: Additional location and access information (localisation).
        phone:
          type: string
          format: phone
          description: Contact phone.
        opening_hours:
          type: string
          format: opening-hours
          description: Opening hours.
        supported_services:
          type: array
          items:
            type: string
          description: Supported operations.
      required:
        - type
        - id
        - name
        - address
        - location
        - opening_hours
    BranchList:
      properties:
        items:
          description: Contains the list of branches.
          type: array
          items:
            $ref: "#/components/schemas/Branch"
      required:
        - items
    CurrencyRate:
      properties:
        type:
          type: string
          description: Type `CurrencyRate`.
        currency_from:
          type: string
          format: iso-4217
          description: Currency ISO 4217 code.
        currency_from_name:
          type: string
          description: Currency name (localisation).
        currency_to:
          type: string
          format: iso-4217
          description: Currency ISO 4217 code.
        currency_to_name:
          type: string
          description: Currency name (localisation).
        exchange_rate:
          type: string
          format: decimal
          description: Currency echange rate.
      required:
        - type
        - currency_from
        - currency_to
        - exchange_rate
    CurrencyRateList:
      properties:
        items:
          description:  Contains the list of currencies.
          type: array
          items:
            $ref: "#/components/schemas/CurrencyRate"
      required:
        - items
    Account:
      properties:
        type:
          type: string
          description: Type `Account`
        id:
          type: string
          format: object-uuid
          description: Account identificator.
        iban:
          type: string
          format: iban
          description: IBAN.
        bic:
          type: string
          format: bic
          description: BIC.
        balance:
          type: string
          format: decimal
          description: Balance.
        currency:
          type: string
          format: iso-4217
          description: Currency ISO 4217 code.
    AccountList:
      properties:
        items:
          description: Countains the list of accounts.
          type: array
          items:
            $ref: "#/components/schemas/Account"
    TransactionSender:
      properties:
        iban:
          type: string
          format: iban
          description: IBAN.
        name:
          type: string
          description: Full name.
    TransactionRecipient:
      properties:
        iban:
          type: string
          format: iban
          description: IBAN.
        bic:
          type: string
          format: bic
          description: BIC.
        name:
          type: string
          description: Full name.
    TransactionCreate:
      properties:
        to:
          type: "#/components/schemas/TransactionRecipient"
          description: Recipient.
        amount:
          type: string
          format: decimal
          description: Transaction amount.
        currency:
          type: string
          format: iso-4217
          description: Currency ISO 4217 code.
        charge_policy:
          type: string
          enum:
            - SHARED
            - RECEIVER
            - SENDER
          description: Charge policy.
        description:
          type: string
          description: Description (optional).
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Metadata (optional).
      required:
        - to
        - amount
        - currency
    Transaction:
      properties:
        type:
          type: string
          description: Type `Transaction`
        id:
          type: string
          format: object-uuid
          description: Operation identificator.
        from:
          type: "#/components/schemas/TransactionSender"
          description: Sender.
        to:
          type: "#/components/schemas/TransactionRecipient"
          description: Recipient.
        amount:
          type: string
          format: decimal
          description: Transaction amount
        currency:
          type: string
          format: iso-4217
          description: Currency ISO 4217 code.
        charge_policy:
          type: string
          enum:
            - SHARED
            - RECEIVER
            - SENDER
          description: Charge policy.
        description:
          type: string
          description: Description.
        metadata:
          type: object
          additionalProperties:
            type: string
          description: Metadata.
        created_at:
          type: string
          format: date-time
          description: Time when transaction was created.
    TransactionList:
      properties:
        items:
          description: Countains the list of transactions.
          type: string
          items:
            $ref: "#/components/schemas/Transaction"
    Error:
      properties:
        code:
          type: string
        message:
          type: string
        fields:
          type: string
  parameters:
    AcceptParameter:
      name: Accept
      in: header
      description: Accept response body content type (default application/json).
      required: false
      schema:
        type: string
        enum:
          - application/json
    ContentTypeParameter:
      name: Content-Type
      in: header
      description: Request body content type (default application/json).
      required: false
      schema:
        type: string
        enum:
          - application/json
    AuthorizationParameter:
      name: Authorization
      in: header
      description: Authorization (OAuth2 Bearer).
      required: true
      schema:
        type: string
        pattern: Bearer [a-z0-9]{40}
        example: Bearer wism73ydof4spe8o92x705t36wbfx41av8bltyys
    ApiVersionParameter:
      name: X-Api-Version
      in: header
      description: API version (default latest).
      required: false
      schema:
        type: string
        example: 1.0.0
    IdempotencyKeyParameter:
      name: X-Idempotency-Key
      in: header
      description: Idempotency key.
      required: false
      schema:
        type: string
    LocalisationParameter:
      name: lang
      in: query
      description: Language of text data (default belarusan).
      required: false
      schema:
        type: string
        format: iso-639-1
        enum:
          - be
          - ru
          - en-US
        example: be
